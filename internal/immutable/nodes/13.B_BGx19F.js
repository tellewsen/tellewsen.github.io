import"../chunks/CWj6FrbW.js";import"../chunks/BDApSGBO.js";import{p as K,f as g,s as n,av as w,c as p,g as a,a as h,b as L,n as A,r as v,m as f,e as r,t as M}from"../chunks/DlJV1d2_.js";import{e as N,r as B,s as O}from"../chunks/Bpg_D06t.js";import{i as R}from"../chunks/xZvNWJia.js";import{r as T}from"../chunks/CJZnkDTd.js";import{b as I,a as S}from"../chunks/7nN6zwsh.js";import{i as P}from"../chunks/D0gpAuLr.js";var Q=g('<p style="color: red;"> </p>'),V=g('<h3>Result</h3> <textarea readonly="" class="svelte-fxe48f"></textarea>',1),W=g('<title>Base64 Encoder / Decoder</title> <h2>Base64 Encoder / Decoder</h2> <div><label><input type="radio"/> Encode</label> <label><input type="radio"/> Decode</label></div> <textarea placeholder="Enter your text here..." class="svelte-fxe48f"></textarea> <button>Run</button> <!> <!>',1);function oe(U,j){K(j,!1);const y=[];let l=f(""),s=f(""),i=f("encode"),c=f(null);function q(e){const t=new TextEncoder().encode(e),o=String.fromCharCode(...t);return btoa(o)}function z(e){const t=atob(e),o=Uint8Array.from(t,x=>x.charCodeAt(0));return new TextDecoder().decode(o)}function F(){try{r(c,null),a(i)==="encode"?r(s,q(a(l))):r(s,z(a(l)))}catch{r(s,""),r(c,"Invalid input for decoding.")}}P();var E=W(),m=n(w(E),4),_=p(m),d=p(_);T(d),d.value=d.__value="encode",A(),v(_);var D=n(_,2),u=p(D);T(u),u.value=u.__value="decode",A(),v(D),v(m);var b=n(m,2);B(b);var C=n(b,2),k=n(C,2);{var G=e=>{var t=Q(),o=p(t,!0);v(t),M(()=>O(o,a(c))),h(e,t)};R(k,e=>{a(c)&&e(G)})}var H=n(k,2);{var J=e=>{var t=V(),o=n(w(t),2);B(o),S(o,()=>a(s),x=>r(s,x)),h(e,t)};R(H,e=>{a(s)&&e(J)})}I(y,[],d,()=>a(i),e=>r(i,e)),I(y,[],u,()=>a(i),e=>r(i,e)),S(b,()=>a(l),e=>r(l,e)),N("click",C,F),h(U,E),L()}export{oe as component};
